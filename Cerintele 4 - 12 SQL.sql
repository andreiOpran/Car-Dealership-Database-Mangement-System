
---------------------------------------- CERINTA 4 - CREARE TABELE ----------------------------------------

SET SERVEROUTPUT ON;

DROP SEQUENCE SECVENTA_CLIENTI;
DROP SEQUENCE SECVENTA_ADRESE_SHOWROOM;
DROP SEQUENCE SECVENTA_MOTOARE;
DROP SEQUENCE SECVENTA_OPTIUNI;
DROP SEQUENCE SECVENTA_SHOWROOM;
DROP SEQUENCE SECVENTA_ANGAJATI;
DROP SEQUENCE SECVENTA_VEHICULE;
DROP SEQUENCE SECVENTA_FACTURI;
DROP SEQUENCE SECVENTA_NUMERE_TELEFON_SHOWROOM;
DROP SEQUENCE SECVENTA_NUMERE_TELEFON_CLIENT;
DROP SEQUENCE SECVENTA_SHOWROOMURI_ANGAJATI;
DROP SEQUENCE SECVENTA_VEHICULE_OPTIUNI;

CREATE SEQUENCE SECVENTA_CLIENTI START WITH 1;
CREATE SEQUENCE SECVENTA_ADRESE_SHOWROOM START WITH 1;
CREATE SEQUENCE SECVENTA_MOTOARE START WITH 1;
CREATE SEQUENCE SECVENTA_OPTIUNI START WITH 1;
CREATE SEQUENCE SECVENTA_SHOWROOM START WITH 1;
CREATE SEQUENCE SECVENTA_ANGAJATI START WITH 1;
CREATE SEQUENCE SECVENTA_VEHICULE START WITH 1;
CREATE SEQUENCE SECVENTA_FACTURI START WITH 1;
CREATE SEQUENCE SECVENTA_NUMERE_TELEFON_SHOWROOM START WITH 1;
CREATE SEQUENCE SECVENTA_NUMERE_TELEFON_CLIENT START WITH 1;
CREATE SEQUENCE SECVENTA_SHOWROOMURI_ANGAJATI START WITH 1;
CREATE SEQUENCE SECVENTA_VEHICULE_OPTIUNI START WITH 1;

DROP TABLE VEHICULE_OPTIUNI CASCADE CONSTRAINTS;
DROP TABLE SHOWROOMURI_ANGAJATI CASCADE CONSTRAINTS;
DROP TABLE NUMERE_TELEFON_CLIENTI CASCADE CONSTRAINTS;
DROP TABLE NUMERE_TELEFON_SHOWROOMURI CASCADE CONSTRAINTS;
DROP TABLE FACTURI CASCADE CONSTRAINTS;
DROP TABLE VEHICULE CASCADE CONSTRAINTS;
DROP TABLE ANGAJATI CASCADE CONSTRAINTS;
DROP TABLE SHOWROOMURI CASCADE CONSTRAINTS;
DROP TABLE OPTIUNI CASCADE CONSTRAINTS;
DROP TABLE MOTOARE CASCADE CONSTRAINTS;
DROP TABLE ADRESE_SHOWROOMURI CASCADE CONSTRAINTS;
DROP TABLE CLIENTI CASCADE CONSTRAINTS;

TRUNCATE TABLE VEHICULE_OPTIUNI;
TRUNCATE TABLE SHOWROOMURI_ANGAJATI;
TRUNCATE TABLE NUMERE_TELEFON_CLIENTI;
TRUNCATE TABLE NUMERE_TELEFON_SHOWROOMURI;
TRUNCATE TABLE FACTURI;
TRUNCATE TABLE VEHICULE;
TRUNCATE TABLE ANGAJATI;
TRUNCATE TABLE SHOWROOMURI;
TRUNCATE TABLE OPTIUNI;
TRUNCATE TABLE MOTOARE;
TRUNCATE TABLE ADRESE_SHOWROOMURI;
TRUNCATE TABLE CLIENTI;


CREATE TABLE CLIENTI (
    ID_CLIENT NUMBER(6) PRIMARY KEY,
    NUME VARCHAR2(256)
);

CREATE TABLE ADRESE_SHOWROOMURI (
    ID_ADRESA_SHOWROOM NUMBER(6) PRIMARY KEY,
    STRADA VARCHAR2(256),
    NUMAR NUMBER(6),
    ORAS VARCHAR2(256)
);

CREATE TABLE MOTOARE (
    ID_MOTOR NUMBER(6) PRIMARY KEY,
    MARCA VARCHAR2(256),
    MODEL VARCHAR2(256),
    CAI_PUTERE NUMBER(6),
    CAPACITATE_CILINDRICA NUMBER(6),
    CONSUM_MEDIU NUMBER(6),
    ASPIRATIE VARCHAR2(256),
    CARBURANT VARCHAR2(256)
);

CREATE TABLE OPTIUNI (
    ID_OPTIUNE NUMBER(6) PRIMARY KEY,
    NUME VARCHAR2(256),
    PRET NUMBER(6)
);

CREATE TABLE SHOWROOMURI (
    ID_SHOWROOM NUMBER(6) PRIMARY KEY,
    ID_ADRESA NUMBER(6),
    NUME VARCHAR2(256),
    FOREIGN KEY (ID_ADRESA) REFERENCES ADRESE_SHOWROOMURI(ID_ADRESA_SHOWROOM)
);

CREATE TABLE ANGAJATI (
    ID_ANGAJAT NUMBER(6) PRIMARY KEY,
    NUME VARCHAR2(256),
    DATA_ANGAJARE DATE,
    SALARIU NUMBER(6)
);

CREATE TABLE VEHICULE (
    ID_VEHICUL NUMBER(6) PRIMARY KEY,
    ID_MOTOR NUMBER(6),
    ID_SHOWROOM NUMBER(6),
    ID_CLIENT NUMBER(6),
    MARCA VARCHAR2(256),
    MODEL VARCHAR2(256),
    AN_FABRICATIE NUMBER(6),
    PRET NUMBER(6),
    FOREIGN KEY (ID_MOTOR) REFERENCES MOTOARE(ID_MOTOR),
    FOREIGN KEY (ID_SHOWROOM) REFERENCES SHOWROOMURI(ID_SHOWROOM),
    FOREIGN KEY (ID_CLIENT) REFERENCES CLIENTI(ID_CLIENT),
    CONSTRAINT CHECK_ID_CLIENT_SHOWROOM CHECK (
        (ID_CLIENT IS NULL AND ID_SHOWROOM IS NOT NULL) 
        OR (ID_CLIENT IS NOT NULL AND ID_SHOWROOM IS NULL)
        OR (ID_CLIENT IS NULL AND ID_SHOWROOM IS NULL)
    )
);

CREATE TABLE FACTURI (
    ID_FACTURA NUMBER(6) PRIMARY KEY,
    ID_CLIENT NUMBER(6) NOT NULL,
    ID_ANGAJAT NUMBER(6) NOT NULL,
    ID_VEHICUL NUMBER(6) NOT NULL,
    DATA_FACTURA DATE,
    SUMA NUMBER(6),
    FOREIGN KEY (ID_CLIENT) REFERENCES CLIENTI(ID_CLIENT),
    FOREIGN KEY (ID_ANGAJAT) REFERENCES ANGAJATI(ID_ANGAJAT),
    FOREIGN KEY (ID_VEHICUL) REFERENCES VEHICULE(ID_VEHICUL)
);

CREATE TABLE NUMERE_TELEFON_SHOWROOMURI (
    ID_NUMAR_TELEFON_SHOWROOM NUMBER(6) PRIMARY KEY,
    ID_SHOWROOM NUMBER(6),
    NUMAR_TELEFON VARCHAR2(256),
    CONSTRAINT CHECK_NUMAR_TELEFON_SHOWROOM CHECK
    (
        REGEXP_LIKE(NUMAR_TELEFON, '^07[0-9]{2} [0-9]{3} [0-9]{3}$')
    ),
    FOREIGN KEY (ID_SHOWROOM) REFERENCES SHOWROOMURI(ID_SHOWROOM)
);

CREATE TABLE NUMERE_TELEFON_CLIENTI (
    ID_NUMAR_TELEFON_CLIENT NUMBER(6) PRIMARY KEY,
    ID_CLIENT NUMBER(6),
    NUMAR_TELEFON VARCHAR2(256),
    CONSTRAINT CHECK_NUMAR_TELEFON_CLIENT CHECK
    (
        REGEXP_LIKE(NUMAR_TELEFON, '^07[0-9]{2} [0-9]{3} [0-9]{3}$')
    ),
    FOREIGN KEY (ID_CLIENT) REFERENCES CLIENTI(ID_CLIENT)
);

CREATE TABLE SHOWROOMURI_ANGAJATI (
    ID_SHOWROOM NUMBER(6),
    ID_ANGAJAT NUMBER(6),
    PROGRAM VARCHAR2(256),
    PRIMARY KEY (ID_SHOWROOM, ID_ANGAJAT),
    FOREIGN KEY (ID_SHOWROOM) REFERENCES SHOWROOMURI(ID_SHOWROOM),
    FOREIGN KEY (ID_ANGAJAT) REFERENCES ANGAJATI(ID_ANGAJAT)
);

CREATE TABLE VEHICULE_OPTIUNI (
    ID_VEHICUL NUMBER(6),
    ID_OPTIUNE NUMBER(6),
    PRIMARY KEY (ID_VEHICUL, ID_OPTIUNE),
    FOREIGN KEY (ID_VEHICUL) REFERENCES VEHICULE(ID_VEHICUL),
    FOREIGN KEY (ID_OPTIUNE) REFERENCES OPTIUNI(ID_OPTIUNE)
);

---------------------------------------- CERINTA 5 - POPULARE TABELE ----------------------------------------

INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Ion Popescu');
INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Maria Ionescu');
INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Vasile Georgescu');
INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Elena Mihai');
INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Cristina Stoica');
INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'CLIENT DUPLICAT'); -- PENTRU EXCEPTII
INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'CLIENT DUPLICAT'); -- PENTRU EXCEPTII
-- INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Andrei Dumitru');
-- INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Daniela Marin');
-- INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Mihai Petrescu');
-- INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Oana Radu');
-- INSERT INTO CLIENTI (ID_CLIENT, NUME) VALUES (SECVENTA_CLIENTI.NEXTVAL, 'Alexandru Baciu');

INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Soseaua Colentina', 33, 'Bucuresti');
INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Strada Republicii', 45, 'Cluj-Napoca');
INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Bulevardul Basarabia', 34, 'Bucuresti');
INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Strada Unirii', 23, 'Timisoara');
INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Strada Libertatii', 56, 'Constanta');
INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Strada Independentei', 78, 'Craiova');
INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Strada Victoriei', 89, 'Brasov');
INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Strada Mihai Viteazu', 101, 'Galati');
INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Strada Stefan cel Mare', 67, 'Ploiesti');
INSERT INTO ADRESE_SHOWROOMURI (ID_ADRESA_SHOWROOM, STRADA, NUMAR, ORAS) VALUES (SECVENTA_ADRESE_SHOWROOM.NEXTVAL, 'Strada Tudor Vladimirescu', 34, 'Oradea');

INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Renault', 'K9K', 110, 1461, 4.8, 'Turbo', 'Diesel');
INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Renault', 'H5Ft', 140, 1333, 5.3, 'Turbo', 'Benzina');
INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Renault', 'F4R', 170, 1998, 7.5, 'Natural', 'Benzina');
INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Renault', 'M9R', 150, 1995, 6.0, 'Turbo', 'Diesel');
INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Dacia', 'K7M', 90, 1598, 7.0, 'Natural', 'Benzina');
INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Dacia', 'K4M', 105, 1598, 6.5, 'Natural', 'Benzina');
INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Dacia', 'H4Bt', 130, 1332, 5.8, 'Turbo', 'Benzina');
INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Renault', 'R9M', 130, 1598, 4.5, 'Turbo', 'Diesel');
INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Dacia', 'H5Ht', 150, 1332, 5.5, 'Turbo', 'Benzina');
INSERT INTO MOTOARE (ID_MOTOR, MARCA, MODEL, CAI_PUTERE, CAPACITATE_CILINDRICA, CONSUM_MEDIU, ASPIRATIE, CARBURANT) 
VALUES (SECVENTA_MOTOARE.NEXTVAL, 'Renault', 'K4J', 75, 1390, 6.8, 'Natural', 'Benzina');

INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Navigatie', 1200);
INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Scaune incalzite', 800);
INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Climatizare automata', 1500);
INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Sistem audio premium', 1000);
INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Faruri LED', 900);
INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Senzori parcare', 600);
INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Camera marsarier', 700);
INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Pilot automat', 1100);
INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Jante aliaj', 1300);
INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (SECVENTA_OPTIUNI.NEXTVAL, 'Trapa panoramica', 2000);

INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
VALUES (SECVENTA_SHOWROOM.NEXTVAL, 1, 'Dacia Bucuresti Colentina');
INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
VALUES (SECVENTA_SHOWROOM.NEXTVAL, 2, 'Dacia Cluj-Napoca');
INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
VALUES (SECVENTA_SHOWROOM.NEXTVAL, 3, 'Dacia Bucuresti Basarabiei');
INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
VALUES (SECVENTA_SHOWROOM.NEXTVAL, 4, 'Dacia Timisoara');
INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
VALUES (SECVENTA_SHOWROOM.NEXTVAL, 5, 'Dacia Constanta');
-- INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
-- VALUES (SECVENTA_SHOWROOM.NEXTVAL, 6, 'Dacia Craiova');
-- INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
-- VALUES (SECVENTA_SHOWROOM.NEXTVAL, 7, 'Dacia Brasov');
-- INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
-- VALUES (SECVENTA_SHOWROOM.NEXTVAL, 8, 'Dacia Galati');
-- INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
-- VALUES (SECVENTA_SHOWROOM.NEXTVAL, 9, 'Dacia Ploiesti');
-- INSERT INTO SHOWROOMURI (ID_SHOWROOM, ID_ADRESA, NUME) 
-- VALUES (SECVENTA_SHOWROOM.NEXTVAL, 10, 'Dacia Oradea');

INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Vasile Ion', TO_DATE('2020-01-15', 'YYYY-MM-DD'), 3500);
INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Mihai Ana', TO_DATE('2019-06-10', 'YYYY-MM-DD'), 4200);
INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Popa George', TO_DATE('2018-03-20', 'YYYY-MM-DD'), 3800);
INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Ionescu Maria', TO_DATE('2021-11-05', 'YYYY-MM-DD'), 3100);
INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Dumitrescu Andrei', TO_DATE('2017-09-12', 'YYYY-MM-DD'), 4500);
INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Stoian Cristina', TO_DATE('2022-02-28', 'YYYY-MM-DD'), 3300);
INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Petre Mihai', TO_DATE('2016-07-19', 'YYYY-MM-DD'), 4700);
INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Radu Elena', TO_DATE('2020-05-23', 'YYYY-MM-DD'), 3600);
INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Badea Alexandru', TO_DATE('2019-08-14', 'YYYY-MM-DD'), 3900);
INSERT INTO ANGAJATI (ID_ANGAJAT, NUME, DATA_ANGAJARE, SALARIU) 
VALUES (SECVENTA_ANGAJATI.NEXTVAL, 'Marinescu Daniela', TO_DATE('2018-12-01', 'YYYY-MM-DD'), 3400);

-- VEHICULE SHOWROOM
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 1, 1, NULL, 'Dacia', 'Duster', 2024, 15000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 2, 1, NULL, 'Dacia', 'Sandero', 2024, 12000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 3, 2, NULL, 'Dacia', 'Logan', 2023, 13000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 4, 3, NULL, 'Dacia', 'Lodgy', 2024, 14000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 5, 4, NULL, 'Dacia', 'Dokker', 2024, 13500);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 6, 5, NULL, 'Dacia', 'Spring', 2024, 16000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 7, 1, NULL, 'Dacia', 'Duster', 2024, 15000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 8, 2, NULL, 'Dacia', 'Sandero', 2025, 12000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 9, 3, NULL, 'Dacia', 'Logan', 2023, 13000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 10, 4, NULL, 'Dacia', 'Lodgy', 2023, 14000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 1, 1, NULL, 'Dacia', 'Duster', 2024, 15000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 2, 1, NULL, 'Dacia', 'Sandero', 2024, 12000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 3, 2, NULL, 'Dacia', 'Logan', 2025, 13000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 4, 3, NULL, 'Dacia', 'Lodgy', 2024, 14000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 5, 4, NULL, 'Dacia', 'Dokker', 2024, 13500);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 6, 5, NULL, 'Dacia', 'Spring', 2024, 16000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 7, 1, NULL, 'Dacia', 'Duster', 2023, 15000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 8, 2, NULL, 'Dacia', 'Sandero', 2023, 12000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 9, 3, NULL, 'Dacia', 'Logan', 2024, 13000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 10, 4, NULL, 'Dacia', 'Lodgy', 2025, 14000);

-- VEHICULE CLIENTI
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 1, NULL, 1, 'Dacia', 'Duster', 2021, 15000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 2, NULL, 2, 'Dacia', 'Sandero', 2023, 12000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 3, NULL, 3, 'Dacia', 'Logan', 2023, 13000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 4, NULL, 4, 'Dacia', 'Lodgy', 2022, 14000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 5, NULL, 5, 'Dacia', 'Dokker', 2019, 13500);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 6, NULL, 1, 'Dacia', 'Spring', 2024, 16000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 7, NULL, 2, 'Dacia', 'Duster', 2024, 15000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 8, NULL, 3, 'Dacia', 'Sandero', 2022, 12000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 9, NULL, 4, 'Dacia', 'Logan', 2021, 13000);
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (SECVENTA_VEHICULE.NEXTVAL, 10, NULL, 1, 'Dacia', 'Lodgy', 2024, 14000);

INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 1, 1, 21, TO_DATE('2021-07-01', 'YYYY-MM-DD'), 15000);
INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 2, 2, 22, TO_DATE('2023-08-15', 'YYYY-MM-DD'), 12000);
INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 3, 3, 23, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 13000);
INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 4, 4, 24, TO_DATE('2022-10-05', 'YYYY-MM-DD'), 14000);
INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 5, 5, 25, TO_DATE('2019-11-20', 'YYYY-MM-DD'), 13500);
INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 1, 6, 26, TO_DATE('2024-12-01', 'YYYY-MM-DD'), 16000);
INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 2, 7, 27, TO_DATE('2024-12-15', 'YYYY-MM-DD'), 15000);
INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 3, 8, 28, TO_DATE('2022-01-10', 'YYYY-MM-DD'), 12000);
INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 4, 1, 29, TO_DATE('2021-02-05', 'YYYY-MM-DD'), 13000);
INSERT INTO FACTURI (ID_FACTURA, ID_CLIENT, ID_ANGAJAT, ID_VEHICUL, DATA_FACTURA, SUMA)
VALUES (SECVENTA_FACTURI.NEXTVAL, 1, 1, 30, TO_DATE('2024-03-20', 'YYYY-MM-DD'), 14000);

INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 1, '0725 426 589');
INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 1, '0754 113 636');
INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 2, '0726 214 577');
INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 2, '0732 355 518');
INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 3, '0727 446 289');
INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 3, '0754 566 491');
INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 4, '0723 638 941');
INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 4, '0754 749 020');
INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 5, '0739 481 395');
INSERT INTO NUMERE_TELEFON_SHOWROOMURI (ID_NUMAR_TELEFON_SHOWROOM, ID_SHOWROOM, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_SHOWROOM.NEXTVAL, 5, '0704 719 578');

INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 1, '0793 765 902');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 1, '0794 832 384');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 2, '0748 200 555');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 2, '0774 195 594');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 3, '0758 102 333');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 3, '0759 392 101');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 4, '0754 393 121');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 4, '0754 102 303');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 5, '0749 584 431');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 5, '0755 492 120');
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 6, '0700 000 006'); -- PENTRU CLIENT DUPLICAT
INSERT INTO NUMERE_TELEFON_CLIENTI (ID_NUMAR_TELEFON_CLIENT, ID_CLIENT, NUMAR_TELEFON)
VALUES (SECVENTA_NUMERE_TELEFON_CLIENT.NEXTVAL, 7, '0700 000 007'); -- PENTRU CLIENT DUPLICAT

INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (1, 1, 'Luni-Miercuri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (1, 2, 'Luni-Vineri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (2, 3, 'Luni-Miercuri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (2, 4, 'Luni-Vineri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (3, 5, 'Luni-Miercuri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (3, 6, 'Luni-Vineri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (4, 7, 'Luni-Miercuri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (4, 8, 'Luni-Vineri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (5, 9, 'Luni-Miercuri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (5, 10, 'Luni-Vineri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (1, 3, 'Joi-Vineri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (2, 5, 'Joi-Vineri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (3, 7, 'Joi-Vineri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (4, 9, 'Joi-Vineri 9-17');
INSERT INTO SHOWROOMURI_ANGAJATI (ID_SHOWROOM, ID_ANGAJAT, PROGRAM) VALUES (5, 1, 'Joi-Vineri 9-17');

INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (11, 1);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (11, 2);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (12, 3);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (12, 4);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (13, 5);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (13, 6);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (14, 7);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (14, 8);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (15, 9);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (15, 10);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (16, 1);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (16, 2);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (17, 3);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (17, 4);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (18, 5);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (18, 6);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (19, 7);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (19, 8);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (20, 9);
INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (20, 10);


---------------------------------------- CERINTA 6 ----------------------------------------

-- Formulați în limbaj natural o problemă pe care să o rezolvați folosind un subprogram stocat
-- independent care să utilizeze toate cele 3 tipuri de colecții studiate. Apelați subprogramul.

-- AFISATI PENTRU FIECARE ANGAJAT IN ORDINE DESCRESCATOARE DUPA TOTALUL SUMELOR FACTURILOR EMISE DE ACESTA:
-- - ID_ANGAJAT 
-- - TOTALUL SUMELOR FACTURILOR EMISE DE ACESTA
-- - NUMARUL DE FACTURI EMISE DE ACESTA


CREATE OR REPLACE PROCEDURE cerinta_6 IS

	TYPE tip_tablou_indexat IS TABLE OF ANGAJATI.ID_ANGAJAT%TYPE INDEX BY PLS_INTEGER;
	TYPE tip_tablou_imbricat IS TABLE OF FACTURI.SUMA%TYPE;
	TYPE tip_vector is VARRAY(100) OF NUMBER(6);

	t_id_angajati tip_tablou_indexat;
	t_suma_facturi tip_tablou_imbricat := tip_tablou_imbricat();
	t_numar_facturi tip_vector := tip_vector();

	v_suma NUMBER(6) := 0;
	v_contor NUMBER(6) := 0;

	aux_id_angajat ANGAJATI.ID_ANGAJAT%TYPE;
	aux_suma_factura FACTURI.SUMA%TYPE;
	aux_numar_facturi NUMBER(6);

	e_zero_angajati EXCEPTION;

BEGIN

	-- ID_ANGAJATI
	SELECT
		ID_ANGAJAT
	BULK COLLECT INTO t_id_angajati
	FROM ANGAJATI;

	IF t_id_angajati.COUNT = 0 THEN
		RAISE e_zero_angajati;
	END IF;

	-- SUME FACTURI
	FOR i IN 1..t_id_angajati.COUNT LOOP

		SELECT
			NVL(SUM(SUMA), 0)
		INTO v_suma
		FROM FACTURI
		WHERE ID_ANGAJAT = t_id_angajati(i);

		t_suma_facturi.EXTEND;
		t_suma_facturi(i) := v_suma;

	END LOOP;

	-- NUMAR FACTURI
	FOR i IN 1..t_id_angajati.COUNT LOOP

		SELECT
			COUNT(*)
		INTO v_contor
		FROM FACTURI
		WHERE ID_ANGAJAT = t_id_angajati(i);

		t_numar_facturi.EXTEND;
		t_numar_facturi(i) := v_contor;

	END LOOP;

	-- SORTARE DESCRESCATOR
	FOR i IN 1..t_id_angajati.COUNT LOOP
		FOR j IN i+1..t_id_angajati.COUNT LOOP
			IF t_suma_facturi(i) < t_suma_facturi(j) THEN
				
				aux_id_angajat := t_id_angajati(i);
				t_id_angajati(i) := t_id_angajati(j);
				t_id_angajati(j) := aux_id_angajat;

				aux_suma_factura := t_suma_facturi(i);
				t_suma_facturi(i) := t_suma_facturi(j);
				t_suma_facturi(j) := aux_suma_factura;

				aux_numar_facturi := t_numar_facturi(i);
				t_numar_facturi(i) := t_numar_facturi(j);
				t_numar_facturi(j) := aux_numar_facturi;

			END IF;
		END LOOP;
	END LOOP;

	-- AFISARE
	FOR i IN 1..t_id_angajati.COUNT LOOP

		DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
		DBMS_OUTPUT.PUT_LINE('ID_ANGAJAT: ' || t_id_angajati(i));
		DBMS_OUTPUT.PUT_LINE('TOTALUL SUMELOR FACTURILOR EMISE DE ACESTA: ' || t_suma_facturi(i));
		DBMS_OUTPUT.PUT_LINE('NUMARUL DE FACTURI EMISE DE ACESTA: ' || t_numar_facturi(i));

	END LOOP;
	DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');

EXCEPTION
	WHEN e_zero_angajati THEN
		RAISE_APPLICATION_ERROR(-20001, 'NU EXISTA ANGAJATI IN BAZA DE DATE');
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20000, 'EROARE: ' || SQLERRM);
END cerinta_6;
/

BEGIN
	cerinta_6;
END;
/


---------------------------------------- CERINTA 7 ----------------------------------------

-- Formulați în limbaj natural o problemă pe care să o rezolvați folosind un subprogram stocat
-- independent care să utilizeze 2 tipuri diferite de cursoare studiate, unul dintre acestea fiind cursor
-- parametrizat, dependent de celălalt cursor. Apelați subprogramul.

-- SA SE AFISEZE VEHICULELE DETINUTE DE CATRE CLIENTI CARE AU FOST VANDUTE IN ANUL 2024 
-- (ANUL VANZARII SE REGASESTE IN FACTURA)
-- LA FIECARE VEHICUL SA SE AFISEZE SI ANGAJATUL CARE A EFECTUAT VANZAREA
-- LA FINAL SA SE AFISEZE SUMA TOTALA A VEHICULELOR VANDUTE IN 2024


CREATE OR REPLACE PROCEDURE cerinta_7 IS

	CURSOR c_vehicule_clienti (p_id_vehicul_factura FACTURI.ID_VEHICUL%TYPE) IS
		SELECT
			ID_VEHICUL,
			MARCA,
			MODEL,
			PRET
		FROM VEHICULE
		WHERE ID_VEHICUL = p_id_vehicul_factura;

	v_cont NUMBER(6) := 0;
	v_suma NUMBER(6) := 0;

	v_nr_vehicule_clienti NUMBER(6) := 0;
	e_nu_exista_vehicule EXCEPTION;

BEGIN

	-- verificare existenta vechiule vandute in 2024
	SELECT
		COUNT(*)
	INTO v_nr_vehicule_clienti
	FROM FACTURI
	WHERE EXTRACT(YEAR FROM DATA_FACTURA) = 2024;

	IF v_nr_vehicule_clienti = 0 THEN
		RAISE e_nu_exista_vehicule;
	END IF;

	DBMS_OUTPUT.PUT_LINE('---------------------------------------------');
	DBMS_OUTPUT.PUT_LINE('VEHICULE VANDUTE IN ANUL 2024:');
	FOR angajat_factura_2024 in (SELECT 
									F.ID_VEHICUL,
									A.ID_ANGAJAT,
									A.NUME 
								FROM FACTURI F
								JOIN ANGAJATI A ON F.ID_ANGAJAT = A.ID_ANGAJAT
								WHERE EXTRACT(YEAR FROM DATA_FACTURA) = 2024) LOOP

		FOR vehicul_client in c_vehicule_clienti(angajat_factura_2024.ID_VEHICUL) LOOP

			v_cont := v_cont + 1;
			v_suma := v_suma + vehicul_client.PRET;
			DBMS_OUTPUT.PUT_LINE('----------------------' || v_cont || '----------------------');
			DBMS_OUTPUT.PUT_LINE('ID_VEHICUL: ' || vehicul_client.ID_VEHICUL);
			DBMS_OUTPUT.PUT_LINE('MARCA: ' || vehicul_client.MARCA);
			DBMS_OUTPUT.PUT_LINE('MODEL: ' || vehicul_client.MODEL);
			DBMS_OUTPUT.PUT_LINE('PRET: ' || vehicul_client.PRET);
			DBMS_OUTPUT.PUT_LINE(' ');
			DBMS_OUTPUT.PUT_LINE('DATE ANGAJAT:');
			DBMS_OUTPUT.PUT_LINE('ID_ANGAJAT: ' || angajat_factura_2024.ID_ANGAJAT);
			DBMS_OUTPUT.PUT_LINE('NUME ANGAJAT: ' || angajat_factura_2024.NUME);

		END LOOP;

	END LOOP;
	DBMS_OUTPUT.PUT_LINE('---------------------------------------------------');
	DBMS_OUTPUT.PUT_LINE('SUMA TOTALA A VEHICULELOR VANDUTE IN 2024: ' || v_suma);

EXCEPTION
	WHEN e_nu_exista_vehicule THEN
		RAISE_APPLICATION_ERROR(-20001, 'NU EXISTA VEHICULE VANDUTE IN ANUL 2024');
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20000, 'EROARE: ' || SQLERRM);
END cerinta_7;
/

BEGIN
	cerinta_7;
END;
/


---------------------------------------- CERINTA 8 ----------------------------------------

-- Formulați în limbaj natural o problemă pe care să o rezolvați folosind un subprogram stocat
-- independent de tip funcție care să utilizeze într-o singură comandă SQL 3 dintre tabelele create.
-- Tratați toate excepțiile care pot apărea, incluzând excepțiile predefinite NO_DATA_FOUND și
-- TOO_MANY_ROWS. Apelați subprogramul astfel încât să evidențiați toate cazurile tratate.

-- SCRIETI O FUNCITE CARE PRIMESTE CA PARAMETRU NUMELE UNUI CLIENT SI RETURNEAZA UN NUMAR
-- DE TELEFON AL ACESTUIA SI NUMARUL DE VEHICULE PE CARE LE-A CUMPARAT
-- DACA NU EXISTA CLIENTI CU ACEL NUME, SE VA AFISA UN MESAJ
-- DACA SUNT 2 CLIENTI CU ACELASI NUME, SE VA AFISA UN MESAJ


CREATE OR REPLACE FUNCTION cerinta_8(p_nume_client IN CLIENTI.NUME%TYPE) RETURN VARCHAR2 IS

	v_nr_clienti NUMBER(6) := 0;
	v_numar_telefon NUMERE_TELEFON_CLIENTI.NUMAR_TELEFON%TYPE;
	v_nr_vehicule NUMBER(6) := 0;
	v_rezultat VARCHAR2(256);

	-- EXCEPTII PROPRII 
	e_nu_exista_clienti EXCEPTION;
	e_prea_multi_clienti EXCEPTION;

BEGIN

	SELECT
		COUNT(*)
	INTO v_nr_clienti
	FROM CLIENTI
	WHERE UPPER(NUME) = UPPER('p_nume_client');

	-- EXCEPTII PROPRII 
	-- IF v_nr_clienti = 0 THEN
	-- 	RAISE e_nu_exista_clienti;
	-- ELSIF v_nr_clienti > 1 THEN
	-- 	RAISE e_prea_multi_clienti;
	-- END IF;

	SELECT
		(SELECT 
			NTC.NUMAR_TELEFON 
		FROM NUMERE_TELEFON_CLIENTI NTC
		WHERE C.ID_CLIENT = NTC.ID_CLIENT AND ROWNUM = 1
		) AS NUMAR_TELEFON,
		COUNT(V.ID_VEHICUL) AS NUMAR_VEHICULE
	INTO v_numar_telefon, v_nr_vehicule
	FROM CLIENTI C
	LEFT JOIN VEHICULE V ON C.ID_CLIENT = V.ID_CLIENT
	WHERE UPPER(C.NUME) = UPPER(p_nume_client)
	GROUP BY C.ID_CLIENT;

	v_rezultat := 'Clientul cu numele ' || p_nume_client || ' are numarul de telefon ' || v_numar_telefon || ' si detine ' || v_nr_vehicule || ' vehicule.';
	RETURN v_rezultat;

EXCEPTION
	-- EXCEPTII PROPRII 
	-- WHEN e_nu_exista_clienti THEN
	-- 	RAISE_APPLICATION_ERROR(-20001, 'NU EXISTA CLIENTI CU ACEST NUME');
	-- WHEN e_prea_multi_clienti THEN
	-- 	RAISE_APPLICATION_ERROR(-20002, 'EXISTA MAI MULTI CLIENTI CU ACEST NUME');
	WHEN TOO_MANY_ROWS THEN
		RAISE_APPLICATION_ERROR(-20004, 'TOO_MANY_ROWS ' || SQLERRM);
	WHEN NO_DATA_FOUND THEN
		RAISE_APPLICATION_ERROR(-20003, 'NO_DATA_FOUND ' || SQLERRM);
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20000, 'EROARE: ' || SQLERRM);
END cerinta_8;
/

DECLARE

	v_rezultat VARCHAR2(256);

BEGIN

	v_rezultat := cerinta_8('ION POPESCU');
	DBMS_OUTPUT.PUT_LINE(v_rezultat);

	v_rezultat := cerinta_8('CLIENT DUPLICAT');
	DBMS_OUTPUT.PUT_LINE(v_rezultat);

	v_rezultat := cerinta_8('CLIENT INEXISTENT');
	DBMS_OUTPUT.PUT_LINE(v_rezultat);

END;
/


---------------------------------------- CERINTA 9 ----------------------------------------

-- Formulați în limbaj natural o problemă pe care să o rezolvați folosind un subprogram stocat
-- independent de tip procedură care să aibă minim 2 parametri și să utilizeze într-o singură
-- comandă SQL 5 dintre tabelele create. Definiți minim 2 excepții proprii, altele decât cele
-- predefinite la nivel de sistem. Apelați subprogramul astfel încât să evidențiați toate 
-- cazurile definite și tratate.

-- DEFINITI O PROCEDURA CARE PRIMESTE CA PARAMETRI ID_VEHICUL, MARCA SI MODELUL UNUI VEHICUL
-- PROCEDURA AFISEAZA
-- - ANUL FABRICATIEI SI PRETUL VEHICULULUI
-- - INFORMATII DESPRE MOTORUL VEHICULULUI
-- - O LISTA CU OPTIUNILE EXTRA ALE VEHICULULUI
-- - DATE DESPRE CLIENT DACA VEHICULUL ESTE DETINUT DE CATRE UN CLIENT, ALTFEL SE AFISEAZA DATE DESPRE SHOWROOM
-- DACA NU EXISTA VEHICULE CU ACEASTA MARCA SI MODEL, SE VA AFISA UN MESAJ CORESPUNZATOR
-- DACA NU ARE OPTIUNI EXTRA ATUNCI SE VA AFISA UN MESAJ CORESPUNZATOR


CREATE OR REPLACE PROCEDURE cerinta_9(p_id_vehicul IN VEHICULE.ID_VEHICUL%TYPE, p_marca IN VEHICULE.MARCA%TYPE, p_model IN VEHICULE.MARCA%TYPE) IS

	TYPE r_cerinta_9 IS RECORD (
		
		id_vehicul VEHICULE.ID_VEHICUL%TYPE,
		marca VEHICULE.MARCA%TYPE,
		model VEHICULE.MODEL%TYPE,
		an_fabricatie VEHICULE.AN_FABRICATIE%TYPE,
		pret VEHICULE.PRET%TYPE,

		id_motor MOTOARE.ID_MOTOR%TYPE,
		cai_putere MOTOARE.CAI_PUTERE%TYPE,
		capacitate_cilindrica MOTOARE.CAPACITATE_CILINDRICA%TYPE,

		nume_client CLIENTI.NUME%TYPE,
		-- SAU
		nume_showroom SHOWROOMURI.NUME%TYPE,

		optiuni VARCHAR2(2048)
	);

	v_r_cerinta_9 r_cerinta_9;

	v_nr_vehicule NUMBER(6) := 0;
	v_nr_optiuni NUMBER(6) := 0;

	e_nu_exista_vehicule EXCEPTION;
	e_nu_are_optiuni EXCEPTION;

BEGIN

	-- EXTRAGERE NUMARUL DE VEHICULE CU COMBINATIA p_id_vehicul, p_marca, p_model
	SELECT
		COUNT(*)
	INTO v_nr_vehicule
	FROM VEHICULE
	WHERE ID_VEHICUL = p_id_vehicul AND UPPER(MARCA) = UPPER(p_marca) 
		AND UPPER(MODEL) = UPPER(p_model);

	IF v_nr_vehicule = 0 THEN
		RAISE e_nu_exista_vehicule;
	END IF;

	-- EXTRAGERE NUMAR OPTIUNI
	SELECT
		COUNT(*)
	INTO v_nr_optiuni
	FROM VEHICULE_OPTIUNI
	WHERE ID_VEHICUL = p_id_vehicul;

	SELECT
		V.ID_VEHICUL,
		V.MARCA,
		V.MODEL,
		V.AN_FABRICATIE,
		V.PRET,
		M.ID_MOTOR,
		M.CAI_PUTERE,
		M.CAPACITATE_CILINDRICA,
		C.NUME,
		S.NUME,
		LISTAGG(O.NUME, ', ') WITHIN GROUP (ORDER BY O.ID_OPTIUNE)
	INTO v_r_cerinta_9.id_vehicul, v_r_cerinta_9.marca, v_r_cerinta_9.model, 
			v_r_cerinta_9.an_fabricatie, v_r_cerinta_9.pret, v_r_cerinta_9.id_motor, 
			v_r_cerinta_9.cai_putere, v_r_cerinta_9.capacitate_cilindrica, 
			v_r_cerinta_9.nume_client, v_r_cerinta_9.nume_showroom, v_r_cerinta_9.optiuni
	FROM VEHICULE V
	JOIN MOTOARE M ON V.ID_MOTOR = M.ID_MOTOR
	LEFT JOIN CLIENTI C ON V.ID_CLIENT = C.ID_CLIENT
	LEFT JOIN SHOWROOMURI S ON V.ID_SHOWROOM = S.ID_SHOWROOM
	LEFT JOIN VEHICULE_OPTIUNI VO ON V.ID_VEHICUL = VO.ID_VEHICUL
	LEFT JOIN OPTIUNI O ON VO.ID_OPTIUNE = O.ID_OPTIUNE
	WHERE V.ID_VEHICUL = p_id_vehicul AND UPPER(V.MARCA) = UPPER(p_marca) 
			AND UPPER(V.MODEL) = UPPER(p_model)
	GROUP BY V.ID_VEHICUL, V.MARCA, V.MODEL, V.AN_FABRICATIE, V.PRET, M.ID_MOTOR, 
				M.CAI_PUTERE, M.CAPACITATE_CILINDRICA, C.NUME, S.NUME;

	-- AFISARE VEHICUL
	DBMS_OUTPUT.PUT_LINE('------------------ DATE VEHICUL ------------------');
	DBMS_OUTPUT.PUT_LINE('ID_VEHICUL: ' || v_r_cerinta_9.id_vehicul);
	DBMS_OUTPUT.PUT_LINE('MARCA: ' || v_r_cerinta_9.marca);
	DBMS_OUTPUT.PUT_LINE('MODEL: ' || v_r_cerinta_9.model);
	DBMS_OUTPUT.PUT_LINE('AN FABRICATIE: ' || v_r_cerinta_9.an_fabricatie);
	DBMS_OUTPUT.PUT_LINE('PRET: ' || v_r_cerinta_9.pret);
	
	-- AFISARE MOTOR
	DBMS_OUTPUT.PUT_LINE(' ');
	DBMS_OUTPUT.PUT_LINE('------------------ DATE MOTOR --------------------');
	DBMS_OUTPUT.PUT_LINE('ID_MOTOR: ' || v_r_cerinta_9.id_motor);
	DBMS_OUTPUT.PUT_LINE('CAI PUTERE: ' || v_r_cerinta_9.cai_putere);
	DBMS_OUTPUT.PUT_LINE('CAPACITATE CILINDRICA: ' || v_r_cerinta_9.capacitate_cilindrica);
	
	-- AFISARE OPTIUNI
	BEGIN

		DBMS_OUTPUT.PUT_LINE(' ');
		DBMS_OUTPUT.PUT_LINE('------------------ DATE OPTIUNI --------------------');
		IF v_nr_optiuni = 0 THEN
			RAISE e_nu_are_optiuni;
		ELSE
			DBMS_OUTPUT.PUT_LINE('OPTIUNI EXTRA: ' || v_r_cerinta_9.optiuni);
		END IF;
		
	EXCEPTION
		WHEN e_nu_are_optiuni THEN
			DBMS_OUTPUT.PUT_LINE('VEHICULUL NU ARE OPTIUNI EXTRA');
	END;

	-- AFISARE CLIENT/SHOWROOM
	IF v_r_cerinta_9.nume_client IS NOT NULL THEN
		DBMS_OUTPUT.PUT_LINE(' ');
		DBMS_OUTPUT.PUT_LINE('------------------ DATE CLIENT ------------------');
		DBMS_OUTPUT.PUT_LINE('NUME CLIENT: ' || v_r_cerinta_9.nume_client);
	ELSE
		DBMS_OUTPUT.PUT_LINE(' ');
		DBMS_OUTPUT.PUT_LINE('------------------ DATE SHOWROOM ---------------');
		DBMS_OUTPUT.PUT_LINE('NUME SHOWROOM: ' || v_r_cerinta_9.nume_showroom);
	END IF;

EXCEPTION
	WHEN e_nu_exista_vehicule THEN
		RAISE_APPLICATION_ERROR(-20001, 'NU EXISTA VEHICULE CU ACEST ID, MARCA SI MODEL');
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20000, 'EROARE: ' || SQLERRM);
END cerinta_9;
/

BEGIN

	cerinta_9(1, 'DACIA', 'DUSTER');
	
	DBMS_OUTPUT.PUT_LINE(' ');
	DBMS_OUTPUT.PUT_LINE(' ');
	DBMS_OUTPUT.PUT_LINE('**********************************************************');
	DBMS_OUTPUT.PUT_LINE(' ');
	DBMS_OUTPUT.PUT_LINE(' ');
	
	cerinta_9(11, 'DACIA', 'DUSTER');
	
	DBMS_OUTPUT.PUT_LINE(' ');
	DBMS_OUTPUT.PUT_LINE(' ');
	DBMS_OUTPUT.PUT_LINE('**********************************************************');
	DBMS_OUTPUT.PUT_LINE(' ');
	DBMS_OUTPUT.PUT_LINE(' ');
	
	cerinta_9(21, 'DACIA', 'DUSTER');

	cerinta_9(-1, 'VEHICUL', 'INEXISTENT');

END;
/


--------------------------------------- CERINTA 10 ---------------------------------------

-- Definiți un trigger de tip LMD la nivel de comandă. Declanșați trigger-ul.

-- CAND SE ADAUGA UN VEHICUL INTR-UN SHOWROOM (ID_SHOWROOM != NULL),
-- TOATE CELELALTE VEHICULE DIN SHOWROOM-UL RESPECTIV PRIMESC O REDUCERE DE 1%
-- NOUL VEHICUL ADAUGAT NU PRIMESTE REDUCERE


CREATE OR REPLACE TRIGGER trigger_cerinta_10
AFTER INSERT ON VEHICULE
DECLARE

	v_id_showroom VEHICULE.ID_SHOWROOM%TYPE;

BEGIN

	DBMS_OUTPUT.PUT_LINE(' ');
	DBMS_OUTPUT.PUT_LINE('-------------------- DECLANSARE TRIGGER CERINTA 10 --------------------');
	DBMS_OUTPUT.PUT_LINE(' ');

	SELECT 
		ID_SHOWROOM
	INTO v_id_showroom
	FROM VEHICULE
	WHERE ID_VEHICUL = (SELECT 
							MAX(ID_VEHICUL) 
						FROM VEHICULE);

	IF v_id_showroom IS NOT NULL THEN -- altfel este vehiculul unui client
		
		UPDATE VEHICULE
		SET PRET = PRET * 0.99
		WHERE ID_SHOWROOM = v_id_showroom
		AND ID_VEHICUL != (SELECT 
						      MAX(id_vehicul) 
						   FROM vehicule);
	
	END IF;

END trigger_cerinta_10;
/

DROP TRIGGER trigger_cerinta_10;

-- EXEMPLU
SELECT ID_VEHICUL, PRET FROM VEHICULE WHERE ID_SHOWROOM = 1;

INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (1000, 1, 1, NULL, 'TEST', 'TEST', 2024, 1000);

SELECT ID_VEHICUL, PRET FROM VEHICULE WHERE ID_SHOWROOM = 1;


--------------------------------------- CERINTA 11 ---------------------------------------

-- Definiți un trigger de tip LMD la nivel de linie. Declanșați trigger-ul.

-- CAND ADAUGI SAU STERGI O OPTIUNE A UNUI VEHICUL, ACTUALIZEAZA PRETUL CORESPUNZATOR
-- PRET_VEHICUL += PRET_OPTIUNE


CREATE OR REPLACE TRIGGER trigger_cerinta_11
AFTER INSERT OR DELETE ON vehicule_optiuni
FOR EACH ROW
DECLARE

	v_pret_optiune OPTIUNI.PRET%TYPE;

BEGIN

	DBMS_OUTPUT.PUT_LINE(' ');
	DBMS_OUTPUT.PUT_LINE('-------------------- DECLANSARE TRIGGER CERINTA 11 --------------------');
	DBMS_OUTPUT.PUT_LINE(' ');

	IF INSERTING THEN
		
		SELECT
			PRET
		INTO v_pret_optiune
		FROM OPTIUNI
		WHERE ID_OPTIUNE = :NEW.ID_OPTIUNE;

		UPDATE VEHICULE
		SET PRET = PRET + v_pret_optiune
		WHERE ID_VEHICUL = :NEW.ID_VEHICUL;
	
	ELSIF DELETING THEN
		
		SELECT
			PRET
		INTO v_pret_optiune
		FROM OPTIUNI
		WHERE ID_OPTIUNE = :OLD.ID_OPTIUNE;

		UPDATE vehicule
		SET pret = pret - v_pret_optiune
		WHERE id_vehicul = :OLD.id_vehicul;

	END IF;
	
END trigger_cerinta_11;
/

DROP TRIGGER trigger_cerinta_11;

-- REINITIALIZARE EXEMPLE
DELETE FROM VEHICULE_OPTIUNI WHERE ID_VEHICUL = 1000 AND ID_OPTIUNE = 100;
DELETE FROM VEHICULE WHERE ID_VEHICUL = 1000;
DELETE FROM OPTIUNI WHERE ID_OPTIUNE = 100;

-- ADAUGARE OPTIUNE LA UN VEHICUL
INSERT INTO VEHICULE (ID_VEHICUL, ID_MOTOR, ID_SHOWROOM, ID_CLIENT, MARCA, MODEL, AN_FABRICATIE, PRET)
VALUES (1000, 1, 1, NULL, 'TEST', 'TEST', 2024, 1000);

SELECT ID_VEHICUL, PRET FROM VEHICULE WHERE ID_VEHICUL = 1000;

INSERT INTO OPTIUNI (ID_OPTIUNE, NUME, PRET) VALUES (100, 'OPTIUNE TEST', 100);

SELECT * FROM OPTIUNI WHERE ID_OPTIUNE = 100;

INSERT INTO VEHICULE_OPTIUNI (ID_VEHICUL, ID_OPTIUNE) VALUES (1000, 100);

SELECT * FROM VEHICULE_OPTIUNI WHERE ID_VEHICUL = 1000 AND ID_OPTIUNE = 100;

SELECT ID_VEHICUL, PRET FROM VEHICULE WHERE ID_VEHICUL = 1000;


-- STERGERE OPTIUNE A UNUI VEHICUL
DELETE FROM VEHICULE_OPTIUNI WHERE ID_VEHICUL = 1000 AND ID_OPTIUNE = 100;

SELECT ID_VEHICUL, PRET FROM VEHICULE WHERE ID_VEHICUL = 1000;


--------------------------------------- CERINTA 12 ---------------------------------------

-- Definiți un trigger de tip LDD. Declanșați trigger-ul.

-- CAND SE DA DROP LA TABELUL VEHICULE, SE VA ARUNCA O EXCEPTIE SI NU SE VA STERGE TABELUL


CREATE OR REPLACE TRIGGER trigger_cerinta_12
BEFORE DROP ON SCHEMA
DECLARE

	e_stergere_tabel_vehicule EXCEPTION;

BEGIN

	IF UPPER(DICTIONARY_OBJ_NAME) = 'VEHICULE' THEN
		RAISE e_stergere_tabel_vehicule;
	END IF;

EXCEPTION
	WHEN e_stergere_tabel_vehicule THEN
		RAISE_APPLICATION_ERROR(-20999, 'TABELUL <<VEHICULE>> ESTE UN TABEL DEFINITIV');

END trigger_cerinta_12;
/

DROP TRIGGER trigger_cerinta_12;

SELECT * FROM VEHICULE;

DROP TABLE VEHICULE CASCADE CONSTRAINTS;

SELECT * FROM VEHICULE;
